networks:
  labnet:
    driver: bridge
    ipam:
      config:
        - subnet: 172.30.0.0/24

services:
  # Запускаем сервис для создания TLS-сертификатов для каждого хоста
  certs-init:
    image: alpine:3.20
    container_name: certs-init
    working_dir: /work/rsyslog/certs
    command: ["/bin/sh","-c","apk add --no-cache openssl bash >/dev/null 2>&1 && chmod +x ./make-certs.sh && ./make-certs.sh"]
    volumes:
      - ./rsyslog/certs:/work/rsyslog/certs
    restart: "no"
    mem_limit: 64m
    cpus: "0.05"

  # Zabbix
  db:
    image: postgres:16-alpine
    container_name: zbx-postgres
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      TZ: ${TZ}
    volumes:
      - zbx-pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U zabbix -d zabbix"]
      interval: 10s
      timeout: 5s
      retries: 10
    restart: unless-stopped
    networks:
      labnet:
        ipv4_address: 172.30.0.5
    mem_limit: 1g
    cpus: "0.40"

  zabbix-server:
    image: zabbix/zabbix-server-pgsql:alpine-7.0-latest
    container_name: zbx-server
    depends_on:
      db:
        condition: service_healthy
    environment:
      DB_SERVER_HOST: db
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      TZ: ${TZ}
    ports:
      - "10051:10051"
    restart: unless-stopped
    networks:
      labnet:
        ipv4_address: 172.30.0.6
    mem_limit: 768m
    cpus: "0.5"

  zabbix-web:
    image: zabbix/zabbix-web-nginx-pgsql:alpine-7.0-latest
    container_name: zbx-web
    depends_on:
      - zabbix-server
    environment:
      DB_SERVER_HOST: db
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      PHP_TZ: ${TZ}
    ports:
      - "8080:8080"
    restart: unless-stopped
    networks: [labnet]
    mem_limit: 1g
    cpus: "0.5"

  # Центральный сервер логов через rsyslog (RELP+TLS)
  log-srv:
    depends_on:
      certs-init:
        condition: service_completed_successfully
    build: ./rsyslog
    container_name: log-srv
    hostname: log-srv
    ports:
      - "6514:6514"
    volumes:
      - rsyslog-logs:/var/log/remote
      - ./rsyslog/certs/ca/ca.crt:/etc/rsyslog/certs/ca.crt:ro
      - ./rsyslog/certs/server/log-srv.crt:/etc/rsyslog/certs/log-srv.crt:ro
      - ./rsyslog/certs/server/log-srv.key:/etc/rsyslog/certs/log-srv.key:ro
    restart: unless-stopped
    networks:
      labnet:
        ipv4_address: 172.30.0.8
    mem_limit: 256m
    cpus: "0.20"

  # Веб-серверы с Nginx + Zabbix Agent2 + rsyslog client
  webserver1:
    depends_on:
      certs-init:
        condition: service_completed_successfully
    build: ./web
    image: lab/webserver:latest
    container_name: webserver1
    hostname: webserver1
    networks:
      labnet:
        ipv4_address: 172.30.0.11
    ports:
      - "8081:80"
    volumes:
      - ./rsyslog/certs/ca/ca.crt:/etc/rsyslog/certs/ca.crt:ro
      - ./rsyslog/certs/web1/client.crt:/etc/rsyslog/certs/client.crt:ro
      - ./rsyslog/certs/web1/client.key:/etc/rsyslog/certs/client.key:ro
    restart: unless-stopped
    mem_limit: 224m
    cpus: "0.15"

  webserver2:
    depends_on:
      certs-init:
        condition: service_completed_successfully
    build: ./web
    image: lab/webserver:latest
    container_name: webserver2
    hostname: webserver2
    networks:
      labnet:
        ipv4_address: 172.30.0.12
    ports:
      - "8082:80"
    volumes:
      - ./rsyslog/certs/ca/ca.crt:/etc/rsyslog/certs/ca.crt:ro
      - ./rsyslog/certs/web2/client.crt:/etc/rsyslog/certs/client.crt:ro
      - ./rsyslog/certs/web2/client.key:/etc/rsyslog/certs/client.key:ro
    restart: unless-stopped
    mem_limit: 224m
    cpus: "0.15"

  # Splunk
  splunk:
    build: ./splunk
    container_name: splunk
    environment:
      SPLUNK_GENERAL_TERMS: --accept-sgt-current-at-splunk-com
      SPLUNK_START_ARGS: --accept-license
      SPLUNK_PASSWORD: ${SPLUNK_PASSWORD}
    ports:
      - "8000:8000"
      - "8089:8089"
      - "9997:9997"
    volumes:
      - splunk-var:/opt/splunk/var
    restart: unless-stopped
    networks:
      labnet:
        ipv4_address: 172.30.0.7
    mem_limit: 2560m
    cpus: "1.00"

  uf-web1:
    build: ./uf
    image: lab/uf:latest
    container_name: uf-web1
    hostname: webserver1
    depends_on:
      - splunk
    restart: unless-stopped
    networks:
      labnet:
        ipv4_address: 172.30.0.21
    mem_limit: 1024m
    cpus: "1.00"

  uf-web2:
    build: ./uf
    image: lab/uf:latest
    container_name: uf-web2
    hostname: webserver2
    depends_on:
      - splunk
    restart: unless-stopped
    networks:
      labnet:
        ipv4_address: 172.30.0.22
    mem_limit: 1024m
    cpus: "1.00"

  monitoring-plugins:
    build: ./plugins
    container_name: monitoring-plugins
    hostname: monitoring-plugins
    networks:
      labnet:
        ipv4_address: 172.30.0.30
    volumes:
      - ./plugins:/usr/lib/zabbix/externalscripts:ro
    restart: unless-stopped
    mem_limit: 128m
    cpus: "0.10"

  # Zabbix Agent2 с external scripts
  zbx-agent-plugins:
    build:
      context: ./zabbix-agent
      dockerfile: Dockerfile
    container_name: zbx-agent-plugins
    hostname: monitoring-plugins
    depends_on:
      - zabbix-server
    volumes:
      #- ./zabbix-agent/external_scripts.conf:/etc/zabbix/zabbix_agent2.d/external_scripts.conf:ro
      - ./plugins:/usr/lib/zabbix/externalscripts:ro
    environment:
      - ZBX_PREPAREAGENTCONF=false
    restart: unless-stopped
    networks:
      labnet:
        ipv4_address: 172.30.0.31
    mem_limit: 128m
    cpus: "0.10"

volumes:
  zbx-pgdata:
  splunk-var:
  splunk-etc:
  rsyslog-logs:
